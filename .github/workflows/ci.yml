name: CI/CD Pipeline

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "saran-main/package-lock.json"

      - name: Install dependencies
        working-directory: ./saran-main
        run: npm ci --legacy-peer-deps

      - name: Run type checking
        working-directory: ./saran-main
        run: npm run typecheck

      - name: Run linting
        working-directory: ./saran-main
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        working-directory: ./saran-main
        run: npm run test:ci
        continue-on-error: true

      - name: Build application
        working-directory: ./saran-main
        run: npm run build:ci
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: saran-main/out/
          retention-days: 7

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: "saran-main/package-lock.json"

      - name: Install dependencies
        working-directory: ./saran-main
        run: npm ci --legacy-peer-deps

      - name: Build for production
        working-directory: ./saran-main
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          working-directory: ./saran-main
